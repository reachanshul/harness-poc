apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webapp.fullname" . }}
  labels:
    {{- include "webapp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "webapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "webapp.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command:
          # - "/bin/false"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # readinessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "exit 1"
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html
        - name: cpu-stress
          image: progrium/stress
          command:
          - /bin/sh
          - -c
          - |
            while true; do
              stress --cpu 1 --timeout 10s
              sleep 15s
            done
          resources:
            requests:
              cpu: "0.5"
            limits:
              cpu: "1"
        - name: date-printer
          image: python:3.9-slim
          command:
          - python
          - -c
          - |
            from http.server import BaseHTTPRequestHandler, HTTPServer
            import datetime

            class MyHandler(BaseHTTPRequestHandler):
                def do_GET(self):
                    self.send_response(200)
                    self.end_headers()
                    self.wfile.write(str(datetime.datetime.now()).encode())

            HTTPServer(('0.0.0.0', 90), MyHandler).serve_forever()
          ports:
            - name: date-port
              containerPort: 90
              protocol: TCP
      volumes:
        - name: html-volume
          configMap:
            name: {{ include "webapp.fullname" . }}


